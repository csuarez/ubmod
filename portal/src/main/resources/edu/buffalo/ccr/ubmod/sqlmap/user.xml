<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="user">
<!-- 
/*
 * The contents of this file are subject to the University at Buffalo Public
 * License Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.ccr.buffalo.edu/licenses/ubpl.txt
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 *
 * The Original Code is UBMoD.
 *
 * The Initial Developer of the Original Code is Research Foundation of State
 * University of New York, on behalf of University at Buffalo.
 *
 * Portions created by the Initial Developer are Copyright (C) 2007 Research
 * Foundation of State University of New York, on behalf of University at
 * Buffalo.  All Rights Reserved.
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 (the "GPL"), or the GNU
 * Lesser General Public License Version 2.1 (the "LGPL"), in which case the
 * provisions of the GPL or the LGPL are applicable instead of those above. If
 * you wish to allow use of your version of this file only under the terms of
 * either the GPL or the LGPL, and not to allow others to use your version of
 * this file under the terms of the UBPL, indicate your decision by deleting
 * the provisions above and replace them with the notice and other provisions
 * required by the GPL or the LGPL. If you do not delete the provisions above,
 * a recipient may use your version of this file under the terms of any one of
 * the UBPL, the GPL or the LGPL.
 *
 * ====================================
 * user.xml
 * ====================================
 * Original Author: Andrew E. Bruno (CCR);
 * Contributor(s): -;
 *
 */
 -->
  <select id="list" resultClass="java.util.HashMap">
    select * from user order by user
  </select>
  <select id="activity" resultClass="java.util.HashMap" parameterClass="java.util.Map">
    select 
        u.user_id,
        u.user,
        u.display_name,
        <include refid="common.statsGrid"/>
    from user u
    left join user_activity ua
        on u.user_id = ua.user_id
        and ua.interval_id = #params.intervalId:INTEGER# 
        and ua.cluster_id = #params.clusterId:INTEGER#
    left join activity a
      on ua.activity_id = a.activity_id
    
    <dynamic prepend="where">
    <isNotNull prepend="and" property="userNames">
        u.user in $userNames$
    </isNotNull>
    <isNotNull prepend="and" property="params.filter" >
        u.user like '%$params.filter$%'
    </isNotNull>
    </dynamic>
    <isNotNull property="params.sortBy" >
        order by $params.sortBy$ $params.sortDir$
    </isNotNull>
    <isNotNull property="params.offset">
    limit #params.offset:INTEGER#,#params.limit:INTEGER#
    </isNotNull>
  </select>
  <select id="activityCount" resultClass="java.lang.Integer" parameterClass="java.util.Map">
    select count(*)
    from user u
    left join user_activity ua
        on u.user_id = ua.user_id
        and ua.interval_id = #params.intervalId:INTEGER# 
        and ua.cluster_id = #params.clusterId:INTEGER#
    left join activity a
      on ua.activity_id = a.activity_id
    <dynamic prepend="where">
    <isNotNull prepend="and" property="userNames">
        u.user in $userNames$
    </isNotNull>
    <isNotNull prepend="and" property="params.filter" >
        u.user like '%$params.filter$%'
    </isNotNull>
    </dynamic>
  </select>
  <select id="activityById" resultClass="java.util.HashMap" parameterClass="java.util.Map">
    select 
        u.user_id,
        u.user,
        u.display_name,
        <include refid="common.activityDetail" />
    from
        user u
    left join
        user_activity ua
        on u.user_id = ua.user_id
        and ua.cluster_id = #clusterId:INTEGER#
        and ua.interval_id = #intervalId:INTEGER#
    left join
        activity a
        on ua.activity_id = a.activity_id
    where
        u.user_id = #userId:INTEGER#

  </select>
  <select id="fetch" resultClass="java.util.HashMap" parameterClass="java.util.Map">
    select 
        u.user_id,
        u.user,
        u.display_name
    from
        user u
    where
        <isNotNull property="id">
        u.user_id = #id#
        </isNotNull>
        <isNotNull property="user">
        u.user = #user#
        </isNotNull>
  </select>
</sqlMap>