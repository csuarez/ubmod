<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="queue">
<!--
/*
 * The contents of this file are subject to the University at Buffalo Public
 * License Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.ccr.buffalo.edu/licenses/ubpl.txt
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 *
 * The Original Code is UBMoD.
 *
 * The Initial Developer of the Original Code is Research Foundation of State
 * University of New York, on behalf of University at Buffalo.
 *
 * Portions created by the Initial Developer are Copyright (C) 2007 Research
 * Foundation of State University of New York, on behalf of University at
 * Buffalo.  All Rights Reserved.
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 (the "GPL"), or the GNU
 * Lesser General Public License Version 2.1 (the "LGPL"), in which case the
 * provisions of the GPL or the LGPL are applicable instead of those above. If
 * you wish to allow use of your version of this file only under the terms of
 * either the GPL or the LGPL, and not to allow others to use your version of
 * this file under the terms of the UBPL, indicate your decision by deleting
 * the provisions above and replace them with the notice and other provisions
 * required by the GPL or the LGPL. If you do not delete the provisions above,
 * a recipient may use your version of this file under the terms of any one of
 * the UBPL, the GPL or the LGPL.
 *
 * ====================================
 * queue.xml
 * ====================================
 * Original Author: Andrew E. Bruno (CCR);
 * Contributor(s): -;
 *
 */
-->
    <select id="selectAll" resultClass="java.util.HashMap">
        select * from queue
    </select>
    <select id="selectFromEvent" resultClass="java.util.HashMap" parameterClass="java.lang.String">
        select host, queue 
        from event 
        where host is not null 
              and queue is not null 
        group by host, queue
    </select>
    <insert id="insert" parameterClass="java.lang.String">
        insert queue set queue=#value#
        <selectKey resultClass="java.lang.Long">
            select last_insert_id() as id
        </selectKey>
    </insert>
    <delete id="deleteClusterLink" parameterClass="java.util.Map">
        delete from queue_cluster where queue_id=#queueId:LONG# and cluster_id=#clusterId:LONG#
    </delete>
    <insert id="insertClusterLink" parameterClass="java.util.Map">
        insert queue_cluster set queue_id=#queueId:LONG#, cluster_id=#clusterId:LONG#
    </insert>
    <insert id="insertActivity" parameterClass="java.util.Map">
        insert into queue_activity set
            user_count=#user_count#,
            group_count=#group_count#,
            cluster_id=#cluster_id#,
            activity_id=#activity_id#,
            queue_id=#queue_id#,
            interval_id=#interval_id#
    </insert>
  <select id="selectActivity" resultMap="activity.ActivityResult" parameterClass="java.util.Map">
    select 
        <include refid="activity.aggregateColumns"/>
    from 
        event e 
    where 
        type = 'E'
        and date_key between #start# and #end#
        and host is not null and queue is not null
    group by
        host,queue
  </select>
    <delete id="truncateActivity">
        truncate queue_activity
    </delete>
</sqlMap>